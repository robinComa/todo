"use strict";angular.module("taskApp",["taskApp.services.task","taskApp.directives.editable"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("taskApp").controller("MainCtrl",["$scope","Task",function(a,b){a.username="User "+Math.floor(101*Math.random()),b.onValues(function(b){a.tasks=b}),a.addTask=function(){b.add({date:(new Date).getTime(),text:this.newTask}),this.newTask=""},a.getTaskIdByIndex=function(b){var c=0;for(var d in a.tasks){if(b==c)return d;c++}return null},a.setTaskDone=function(c){var d=!a.tasks[c].done;a.tasks[c].done=d,b.setDone(c,d)},a.removeTask=function(c){delete a.tasks[c],b.remove(c)},a.setTaskText=function(a,c){b.setText(a,c)}}]),angular.module("taskApp.services.task",[]).factory("Task",["$rootScope",function(a){var b=new Firebase("https://to-do.firebaseio.com/"),c=!0;return{onValues:function(d){b.on("value",function(b){null!==b.val()&&(c?a.$apply(function(){d(b.val())}):d(b.val())),c=!1})},add:function(a){b.push(a)},remove:function(a){b.child(a).remove()},setDone:function(a,c){b.child(a).update({done:c})},setText:function(a,c){b.child(a).update({text:c})}}}]),angular.module("taskApp.directives.editable",["ui"]).directive("editable",function(){return{restrict:"E",replace:!0,scope:{model:"=model",changed:"&"},templateUrl:"views/editable.html",controller:["$scope",function(){}],link:function(a,b){a.editorEnabled=!1,a.unEdit=function(b){a.model=angular.copy(a.editModel),a.editorEnabled=!1,null!=b&&b.preventDefault(),a.changed()},a.enableEditor=function(){a.editModel=angular.copy(a.model),a.editorEnabled=!0,timer=setTimeout(function(){b.find("input").focus().select()},200)}}}});